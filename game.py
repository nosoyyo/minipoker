# __author__: arslan
# __date__: 2021/10/11

import random
from typing import Protocol

from thpoker.core import Hand, Table, Combo, Cards
from utils import RawCards
from exceptions import *

class Player():
    def __init__(self, name=None, AI=True) -> None:
        if not name:
            name = 'arslan'
        self.name = name
        self.AI = AI
    def __repr__(self) -> str:
        return f'<玩家：{self.name}>'

    hand = []
    cash = 600

    def Bet(self, bet, pool):
        if self.cash < bet:
            raise OverBetError(f'不能下这些，你只有{self.cash}了')
        else:
            self.cash -= bet
            pool += bet
        return pool

# here comes arslan
PLAYER = Player(AI=False)

def InitGame():

    global TABLE
    global PREFLOP_FLAG
    global FLOP_FLAG
    global POOL
    TABLE = []
    PREFLOP_FLAG = False
    FLOP_FLAG = False
    POOL = 0

    random.shuffle(RawCards)


def MakeUpPlayers(num: int=5):
    '''
    :TODO: random order for everyone, decide who is SB/BB
    or, fixed position but randomly distribute to players
    0 - SB
    1 - BB
    2 - UTG
    3 - UTG + 1
    4 - CO
    5 - BT
    '''
    global PLAYERS
    PLAYERS = {}
    AI_NAMES = ['云师','jimmy仔','修师','范师','西米','铁锤','Zakk','胡哥','六爷','莎翁',]
    random.shuffle(AI_NAMES)
    result = AI_NAMES[:num]
    result = list(map(lambda x: Player(name=x), result))
    result.append(PLAYER)
    random.shuffle(result)

    for i in range(num+1):
        PLAYERS.update(
            {i:result[i]}
            )

    return PLAYERS

def Preflop(players: list):
    '''
    :players: <list> generated by MakeUpPlayers
    '''
    global PREFLOP_FLAG
    if not PREFLOP_FLAG:
        for p in players:
            p.hand = Hand(f'{dealer.pop()}/{dealer.pop()}')
            PREFLOP_FLAG = True
        return
    else:
        print('already PREFLOP!')


def Flop():
    global FLOP_FLAG
    global TABLE
    if not FLOP_FLAG:
        TABLE = Table(f'{dealer.pop()}/{dealer.pop()}/{dealer.pop()}')
        FLOP_FLAG = True
        return TABLE
    else:
        raise AlreadyFloppedError('already FLOPPED!!')
    print(f'current TABLE: {TABLE}')

    